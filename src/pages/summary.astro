---
import packageJson from '../../package.json';
const version = packageJson.version;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Pre-flight jet lag preparation summary - quick daily schedule" />
    <meta name="theme-color" content="#0ea5e9" />
    <title>Pre-Flight Schedule - Flight Shifter</title>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-6">
      <header class="text-center mb-6">
        <div class="flex items-center justify-center gap-2 mb-3">
          <span class="text-2xl">‚úàÔ∏è</span>
          <h1 class="text-2xl font-bold text-sky-600">Flight Shifter</h1>
          <span class="text-sm text-gray-500 bg-gray-200 px-2 py-1 rounded">v{version}</span>
        </div>
        <div class="flex gap-3 justify-center text-sm mb-2 flex-wrap">
          <a href="/" class="text-sky-600 hover:text-sky-800 underline">‚Üê Back to planner</a>
          <a href="/plan" class="text-sky-600 hover:text-sky-800 underline">Full schedule ‚Üí</a>
          <button id="export-plan" class="text-sky-600 hover:text-sky-800 underline bg-none border-none cursor-pointer text-sm">üíæ Export</button>
        </div>
        <p class="text-xs text-gray-400 max-w-2xl mx-auto">
          Created in Stradbroke Island ‚Ä¢ Based on Harvard Medical School & PLOS research
        </p>
      </header>

      <main class="max-w-2xl mx-auto">
        <!-- Trip Overview -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 class="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
            <span>üß≥</span> Your Trip Summary
          </h2>
          <div id="trip-overview" class="space-y-2 text-sm text-gray-600">
            <!-- Will be populated by JavaScript -->
          </div>
        </div>

        <!-- Pre-Flight Schedule -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
          <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center gap-2">
            <span>üìÖ</span> Next Few Days (Before Flight)
          </h3>
          <div id="pre-flight-schedule" class="space-y-4">
            <!-- Will be populated by JavaScript -->
          </div>
        </div>

        <!-- Quick Tips -->
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 class="font-semibold text-blue-800 mb-2 flex items-center gap-2">
            <span>üí°</span> Quick Reminders
          </h3>
          <ul class="space-y-1 text-blue-700 text-sm">
            <li>‚Ä¢ Set phone reminders for light exposure times</li>
            <li>‚Ä¢ Start adjusting gradually - don't shock your system</li>
            <li>‚Ä¢ Outdoor sunlight is always best when possible</li>
            <li>‚Ä¢ Download offline maps of your destination</li>
          </ul>
        </div>
      </main>
    </div>

    <script>
      // Load travel plan from localStorage
      const planData = localStorage.getItem('jetlagPlan');
      
      if (planData) {
        const plan = JSON.parse(planData);
        
        // Populate trip overview
        const overviewDiv = document.getElementById('trip-overview');
        if (overviewDiv && plan.travelDetails) {
          const depDate = new Date(plan.travelDetails.departureTime);
          const arrDate = new Date(plan.travelDetails.arrivalTime);
          
          overviewDiv.innerHTML = `
            <div><strong>From:</strong> ${plan.travelDetails.departureTimezone} ‚Üí <strong>To:</strong> ${plan.travelDetails.arrivalTimezone}</div>
            <div><strong>Departure:</strong> ${depDate.toLocaleString()}</div>
            <div><strong>Arrival:</strong> ${arrDate.toLocaleString()} (${plan.arrivalLocalTime || 'local time'})</div>
            <div><strong>Time zones:</strong> ${plan.timeZonesDifference} (${plan.direction})</div>
            <div><strong>Flight duration:</strong> ~${plan.flightDuration || 'calculating...'} hours</div>
            <div><strong>Estimated adjustment:</strong> ${plan.estimatedAdjustmentDays} days</div>
          `;
        }
        
        // Generate simple pre-flight schedule
        const scheduleDiv = document.getElementById('pre-flight-schedule');
        if (scheduleDiv) {
          const today = new Date();
          const depDate = new Date(plan.travelDetails?.departureTime || today);
          const daysUntilFlight = Math.ceil((depDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
          
          let scheduleHTML = '';
          
          for (let day = 0; day < Math.min(daysUntilFlight, 3); day++) {
            const currentDate = new Date(today);
            currentDate.setDate(today.getDate() + day);
            const dayName = day === 0 ? 'Today' : day === 1 ? 'Tomorrow' : currentDate.toLocaleDateString('en-US', { weekday: 'long' });
            
            scheduleHTML += `
              <div class="border-l-4 border-sky-500 pl-4 py-2">
                <h4 class="font-semibold text-gray-800">${dayName} (Day ${day + 1})</h4>
                <div class="text-sm text-gray-600 space-y-1">
            `;
            
            // Calculate adjusted sleep times for this day - proper gradual adjustment
            const originalBedtime = plan.travelDetails?.usualBedtime || '23:00';
            const originalWakeTime = plan.travelDetails?.usualWakeTime || '07:00';
            
            const [bedHour, bedMin] = originalBedtime.split(':').map(Number);
            const [wakeHour, wakeMin] = originalWakeTime.split(':').map(Number);
            
            // Much more gradual adjustment: 30-45 minutes per day maximum
            const maxDailyShift = 0.75; // 45 minutes max per day
            const totalDays = Math.max(3, Math.min(plan.timeZonesDifference, 7)); // More days for big changes
            const dailyShift = Math.min(maxDailyShift, plan.timeZonesDifference / totalDays);
            const todaysShift = dailyShift * day;
            
            if (plan.direction === 'eastward') {
              // Advance sleep schedule gradually (go to bed/wake earlier)
              const targetBedtime = Math.max(bedHour - todaysShift, Math.max(bedHour - 3, 19)); // Don't go more than 3 hours or before 7 PM
              const targetWakeTime = Math.max(wakeHour - todaysShift, Math.max(wakeHour - 3, 5)); // Don't go more than 3 hours or before 5 AM
              const lightDimTime = Math.max(targetBedtime - 2, 18); // Dim time, not before 6 PM
              
              scheduleHTML += `
                <div class="bg-blue-50 p-3 rounded-lg mb-3">
                  <div class="font-bold text-blue-800 mb-2">üò¥ SLEEP SCHEDULE</div>
                  <div><strong>Wake up: ${Math.floor(targetWakeTime)}:${((targetWakeTime % 1) * 60).toFixed(0).padStart(2, '0')}</strong> (${(todaysShift * 60).toFixed(0)} min earlier than usual)</div>
                  <div><strong>Go to bed: ${Math.floor(targetBedtime)}:${((targetBedtime % 1) * 60).toFixed(0).padStart(2, '0')}</strong> (${(todaysShift * 60).toFixed(0)} min earlier than usual)</div>
                </div>
                
                <div class="space-y-2 text-sm">
                  <div><strong>${Math.floor(targetWakeTime)}:${((targetWakeTime % 1) * 60).toFixed(0).padStart(2, '0')}:</strong> üò¥ WAKE UP + immediate bright light (go outside!)</div>
                  <div><strong>06:00-10:00:</strong> üåÖ Bright light therapy (10,000+ lux outdoors preferred)</div>
                  <div><strong>12:00-14:00:</strong> üçΩÔ∏è Lunch at normal time, avoid heavy meals</div>
                  <div><strong>${Math.floor(lightDimTime)}:${((lightDimTime % 1) * 60).toFixed(0).padStart(2, '0')}:</strong> üåô Start dimming ALL lights, blue light filters ON</div>
                  <div><strong>${Math.floor(targetBedtime)}:${((targetBedtime % 1) * 60).toFixed(0).padStart(2, '0')}:</strong> üò¥ GO TO BED - no screens, complete darkness</div>
                  <div><strong>Naps:</strong> ‚ö†Ô∏è AVOID or max 20 min before 2 PM only</div>
                  <div><strong>Caffeine:</strong> ‚òï Stop by 2 PM to avoid sleep interference</div>
                </div>
              `;
            } else {
              // Delay sleep schedule gradually (go to bed/wake later) - MUCH more conservative
              const maxBedtimeShift = Math.min(2, todaysShift); // Never more than 2 hours later
              const targetBedtime = Math.min(bedHour + maxBedtimeShift, bedHour + 2); // Cap at 2 hours later max
              const targetWakeTime = Math.min(wakeHour + maxBedtimeShift, wakeHour + 2); // Cap at 2 hours later max
              
              scheduleHTML += `
                <div class="bg-orange-50 p-3 rounded-lg mb-3">
                  <div class="font-bold text-orange-800 mb-2">üò¥ SLEEP SCHEDULE</div>
                  <div><strong>Wake up: ${Math.floor(targetWakeTime)}:${((targetWakeTime % 1) * 60).toFixed(0).padStart(2, '0')}</strong> (${(todaysShift * 60).toFixed(0)} min later than usual)</div>
                  <div><strong>Go to bed: ${Math.floor(targetBedtime)}:${((targetBedtime % 1) * 60).toFixed(0).padStart(2, '0')}</strong> (${(todaysShift * 60).toFixed(0)} min later than usual)</div>
                </div>
                
                <div class="space-y-2 text-sm">
                  <div><strong>06:00-10:00:</strong> üï∂Ô∏è Keep lights DIM, wear sunglasses outside</div>
                  <div><strong>${Math.floor(targetWakeTime)}:${((targetWakeTime % 1) * 60).toFixed(0).padStart(2, '0')}:</strong> üò¥ WAKE UP (sleep in ${(maxBedtimeShift * 60).toFixed(0)} min longer), minimal light</div>
                  <div><strong>12:00-15:00:</strong> ‚òÄÔ∏è Normal indoor lighting OK, avoid bright outdoor sun</div>
                  <div><strong>15:00-16:00:</strong> üí§ Strategic nap OK: <30 min, must end 8+ hrs before bed</div>
                  <div><strong>16:00-${Math.floor(targetBedtime - 1)}:${((((targetBedtime - 1) % 1) * 60).toFixed(0).padStart(2, '0'))}:</strong> üåÖ Bright light exposure to gradually delay clock</div>
                  <div><strong>${Math.floor(targetBedtime - 1)}:${((((targetBedtime - 1) % 1) * 60).toFixed(0).padStart(2, '0'))}:</strong> üåô Start dimming lights, prepare for bed</div>
                  <div><strong>${Math.floor(targetBedtime)}:${((targetBedtime % 1) * 60).toFixed(0).padStart(2, '0')}:</strong> üò¥ GO TO BED (${(maxBedtimeShift * 60).toFixed(0)} min later than usual)</div>
                  <div><strong>Caffeine:</strong> ‚òï OK until ${Math.floor(targetBedtime - 6)}:00, then avoid</div>
                </div>
              `;
            }
            
            scheduleHTML += `
                </div>
              </div>
            `;
          }
          
          if (daysUntilFlight <= 0) {
            scheduleHTML = `
              <div class="text-center py-8">
                <span class="text-4xl">üõ´</span>
                <h3 class="text-lg font-semibold text-gray-800 mt-2">Flight Day!</h3>
                <p class="text-gray-600">Check your full schedule for travel day recommendations</p>
                <a href="/plan" class="inline-block mt-4 bg-sky-600 text-white px-4 py-2 rounded-lg hover:bg-sky-700">
                  View Full Schedule
                </a>
              </div>
            `;
          } else if (daysUntilFlight > 3) {
            scheduleHTML += `
              <div class="text-center py-4 text-gray-500">
                <p>Start your preparation 3 days before departure</p>
                <p class="text-sm">Come back ${daysUntilFlight - 3} days before your flight</p>
              </div>
            `;
          }
          
          scheduleDiv.innerHTML = scheduleHTML;
        }
      } else {
        // No plan data found
        document.querySelector('main').innerHTML = `
          <div class="text-center py-12">
            <span class="text-6xl">üìã</span>
            <h2 class="text-xl font-semibold text-gray-800 mt-4">No Plan Found</h2>
            <p class="text-gray-600 mt-2">Please create your jet lag plan first</p>
            <a href="/" class="inline-block mt-6 bg-sky-600 text-white px-6 py-3 rounded-lg hover:bg-sky-700">
              Create Plan
            </a>
          </div>
        `;
      }

      // Export plan functionality
      document.getElementById('export-plan')?.addEventListener('click', function() {
        const planData = localStorage.getItem('jetlagPlan');
        if (planData) {
          const plan = JSON.parse(planData);
          const exportData = {
            flightShifterPlan: plan,
            exportDate: new Date().toISOString(),
            version: '0.4.0'
          };
          
          const blob = new Blob([JSON.stringify(exportData, null, 2)], {
            type: 'application/json'
          });
          
          const url = URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = `flight-shifter-plan-${new Date().toISOString().split('T')[0]}.json`;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          URL.revokeObjectURL(url);
          
          // Show success message
          const btn = document.getElementById('export-plan');
          const originalText = btn?.textContent;
          if (btn) {
            btn.textContent = '‚úÖ Done!';
            setTimeout(() => {
              btn.textContent = originalText;
            }, 2000);
          }
        } else {
          alert('No plan found to export.');
        }
      });
    </script>
  </body>
</html>